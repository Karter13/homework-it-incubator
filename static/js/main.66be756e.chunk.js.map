{"version":3,"sources":["components/Navbar/Navbar.module.css","components/PreJunior/Message/Message.module.css","components/PreJunior/Affairs/Affairs.module.css","components/common/Input/Input.module.css","components/common/Button/Button.module.css","components/common/Checkbox/Checkbox.module.css","components/common/EditableSpan/EditableSpan.module.css","components/Junior/Junior.module.css","components/common/Select/Select.module.css","components/common/Radio/Radio.module.css","components/PreJunior/Image/Image.module.css","components/PreJunior/Greeting/Greeting.module.css","components/Navbar/Navbar.tsx","components/common/Input/Input.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/Select/Select.tsx","components/common/Radio/Radio.tsx","components/Junior/Junior.tsx","components/JuniorPlus/JuniorPlus.tsx","components/PreJunior/Image/Image.tsx","components/PreJunior/Message/Message.tsx","components/common/Button/Button.tsx","components/PreJunior/Affairs/Affairs.tsx","components/PreJunior/Greeting/Greeting.tsx","components/common/Checkbox/Checkbox.tsx","components/PreJunior/UniversalComponents/UniversalComponents.tsx","components/PreJunior/PreJunior.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","className","styles","nav","menu","item","to","activeClassName","activeLick","Input","props","error","style","input","type","value","onChange","e","currentTarget","onKeyPress","pressEnter","autoFocus","onBlur","EditableSpan","useState","editMode","setEditMode","span","onDoubleClick","Select","option","selections","map","s","key","id","name","Radio","radio","checked","Junior","setValue","setError","undefined","parentValue","setParentValue","radioValue","setRadioValue","main","trim","alert","onClick","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","newValue","defaultState","getItem","parse","restoreState","console","log","JuniorPlus","Image","logo","src","url","alt","Message","block","myName","content","text","myText","time","realTime","MessageName","MessageText","MessageTime","Button","red","button","click","Affairs","list","affairs","a","mean","priority","removeBusiness","buttonsBox","filterAffairs","Greeting","newNameTitle","setNewNameTitle","addNewName","addName","box","event","charCode","names","length","Checkbox","optionInput","checkboxValue","changeValue","UniversalComponents","setCheckboxValue","PreJunior","App","setAffairs","filter","setFilter","v1","setNames","newNames","newAffairs","b","tasksForAffairs","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,qBAAqB,WAAa,6B,iBCAjHD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,wB,gBCArJD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,WAAa,8B,mBCAtHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,gBCAvDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,oBCAzDD,EAAOC,QAAU,CAAC,YAAc,8BAA8B,aAAa,6BAA6B,MAAQ,0B,oBCAhHD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,sB,gBCAzBD,EAAOC,QAAU,CAAC,IAAM,wB,6NCGXC,EAAS,WAClB,OACI,yBAAKC,UAAWC,IAAOC,KAAvB,IAA6B,wCACzB,yBAAKF,UAAWC,IAAOE,MACnB,yBAAKH,UAAWC,IAAOG,MACnB,kBAAC,IAAD,CAASC,GAAI,aAAcC,gBAAiBL,IAAOM,YAAnD,cAEJ,yBAAKP,UAAWC,IAAOG,MACnB,kBAAC,IAAD,CAASC,GAAI,UAAWC,gBAAiBL,IAAOM,YAAhD,WAEJ,yBAAKP,UAAWC,IAAOG,MACnB,kBAAC,IAAD,CAASC,GAAI,cAAeC,gBAAiBL,IAAOM,YAApD,kB,kCCJPC,EAAiC,SAACC,GAO3C,OACI,6BACI,2BAAOT,UAAWS,EAAMC,MAAN,UAAiBC,IAAMC,MAAvB,YAAgCD,IAAMD,OAAUC,IAAMC,MAAOC,KAAK,OAC7EC,MAAOL,EAAMK,MACbC,SATC,SAACC,GACbP,EAAMM,SAASC,EAAEC,cAAcH,QASpBI,WAAYT,EAAMU,WAClBC,WAAS,EACTC,OAAQZ,EAAMY,WCbpBC,EAAgD,SAACb,GAAW,IAAD,EAEtCc,oBAAkB,GAFoB,mBAE/DC,EAF+D,KAErDC,EAFqD,KAgBpE,OACID,EACM,0BAAMxB,UAAWW,IAAMe,KAAMC,cAdb,WACtBF,GAAY,KAa0DhB,EAAMK,OACtE,kBAAC,EAAD,CAAOA,MAAOL,EAAMK,MACbC,SARG,SAACD,GACjBL,EAAMM,SAASD,IAQFJ,MAAOD,EAAMC,MACbW,OAfW,WACxBI,GAAY,GACZhB,EAAMM,SAASN,EAAMK,W,kCCVhBc,EAAoC,SAACnB,GAE9C,IAAIoB,EAASpB,EAAMqB,WACdC,KAAI,SAAAC,GAAC,OAAI,4BAAQC,IAAKD,EAAEE,GAAIpB,MAAOkB,EAAElB,OAAQkB,EAAEG,SAMpD,OACI,4BAAQrB,MAAOL,EAAMK,MAAOC,SALf,SAACC,GACdP,EAAMM,SAASC,EAAEC,cAAcH,QAIiBd,UAAWC,IAAOG,MAC7DyB,I,iBCbAO,EAAkC,SAAC3B,GAK5C,OACI,6BACI,yBAAKT,UAAWC,IAAOoC,OACnB,2BAAOxB,KAAK,QAAQyB,SAAS,EAAOvB,SAN1B,SAACC,GACnBP,EAAMM,SAASC,EAAEC,cAAcqB,YAMvB,0CCNHC,EAAS,WAAO,IAAD,EAEEhB,mBAAS,gBAFX,mBAEjBT,EAFiB,KAEV0B,EAFU,OAGEjB,mBAAwB,MAH1B,mBAGjBb,EAHiB,KAGV+B,EAHU,OAIclB,wBAA6BmB,GAJ3C,mBAIjBC,EAJiB,KAIJC,EAJI,OAKYrB,oBAAkB,GAL9B,mBAKjBsB,EALiB,KAKLC,EALK,KAqDxB,OACI,yBAAK9C,UAAWW,IAAMoC,MAClB,sCACA,kBAAC,EAAD,CAAcjC,MAAOA,EACPC,SAjCL,SAACD,GACVA,EAAMkC,OACNR,EAAS1B,IAETmC,MAAM,SACNR,EAAS,WA6BK/B,MAAOA,IAErB,4BAAQwC,QAvBhB,YAJA,SAAsBjB,EAAakB,GAC/B,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQvB,EAAKmB,GAG1BK,CAAU,OAAQ3C,KAsBd,QACA,4BAAQoC,QAfhB,WACI,IAAMQ,EANV,SAAyBzB,EAAa0B,GAClC,IAAMP,EAAgBG,aAAaK,QAAQ3B,GAE3C,OADsB,OAAlBmB,IAAwBO,EAAeN,KAAKQ,MAAMT,IAC/CO,EAGkBG,CAAqB,OAAQ,KACtDC,QAAQC,IAAIN,GACZlB,EAASkB,KAYL,WACA,6BACA,kBAAC,EAAD,CAAQ3C,SA3CO,SAACD,GACpB8B,EAAe9B,IA0CuBA,MAAO6B,EAAab,WAjDpB,CACtC,CAACI,GAAI,EAAGpB,MAAO,IAAKqB,KAAM,SAC1B,CAACD,GAAI,EAAGpB,MAAO,IAAKqB,KAAM,SAC1B,CAACD,GAAI,EAAGpB,MAAO,IAAKqB,KAAM,MAC1B,CAACD,GAAI,EAAGpB,MAAO,IAAKqB,KAAM,cA8CtB,6BACA,kBAAC,EAAD,CAAOrB,MAAO+B,EAAY9B,SAzDd,SAACD,GACjBgC,GAAehC,GACfiD,QAAQC,IAAInB,IAuDyCV,KAAM,YC3EtD8B,EAAa,WACtB,OACI,6BACI,4C,iBCECC,EAAkC,SAACzD,GAC5C,OACI,yBAAKT,UAAWgC,IAAEmC,MACd,yBAAKC,IAAK3D,EAAM4D,IAAKC,IAAI,W,gBCDxBC,EAAsC,SAAC9D,GAChD,OACI,yBAAKT,UAAWgC,IAAEwC,OACd,kBAAC,EAAD,CAAarC,KAAM1B,EAAMgE,SACzB,yBAAKzE,UAAWgC,IAAE0C,SACd,kBAAC,EAAD,CAAaC,KAAMlE,EAAMmE,SACzB,kBAAC,EAAD,CAAaC,KAAMpE,EAAMqE,cASnCC,EAA8C,SAACtE,GACjD,OACI,yBAAKT,UAAWgC,IAAEG,MACb1B,EAAM0B,OAQb6C,EAA8C,SAACvE,GACjD,OACI,yBAAKT,UAAWgC,IAAE2C,MACblE,EAAMkE,OAQbM,EAA8C,SAACxE,GACjD,OACI,yBAAKT,UAAWgC,IAAE6C,MACbpE,EAAMoE,O,iCCxCNK,EAAoC,SAACzE,GAC9C,OACI,oCACI,4BAAQT,UAAyB,WAAdS,EAAM0E,IAAN,UAA4BxE,IAAMyE,OAAlC,YAA4CzE,IAAME,MAASF,IAAMyE,OAAQlC,QAASzC,EAAM4E,OAAQ5E,EAAMK,SCKxHwE,EAAsC,SAAC7E,GAEhD,OACI,yBAAKT,UAAWgC,IAAEuD,MACd,uCAEI9E,EAAM+E,QAAQzD,KAAI,SAAA0D,GAIV,OACI,yBAAKxD,IAAKwD,EAAEvD,GAAIlC,UAAWgC,IAAE5B,MACzB,yBAAKJ,UAAWgC,IAAEG,MAAOsD,EAAEtD,MAC3B,yBAAKnC,UAAWgC,IAAE0D,MAAOD,EAAEE,UAC3B,kBAAC,EAAD,CAAQN,MAPG,WACf5E,EAAMmF,eAAeH,EAAEvD,KAMQpB,MAAO,SAAUqE,IAAK,eAMrE,yBAAKnF,UAAWgC,IAAE6D,YACd,kBAAC,EAAD,CAAQR,MAAO,kBAAM5E,EAAMqF,cAAc,QAAQhF,MAAO,QACxD,kBAAC,EAAD,CAAQuE,MAAO,kBAAM5E,EAAMqF,cAAc,SAAShF,MAAO,SACzD,kBAAC,EAAD,CAAQuE,MAAO,kBAAM5E,EAAMqF,cAAc,WAAWhF,MAAO,WAC3D,kBAAC,EAAD,CAAQuE,MAAO,kBAAM5E,EAAMqF,cAAc,QAAQhF,MAAO,W,iBCzB3DiF,EAAwC,SAACtF,GAAW,IAAD,EAEtBc,mBAAiB,IAFK,mBAEvDyE,EAFuD,KAEzCC,EAFyC,KAOtDC,EAAa,WACfzF,EAAM0F,QAAQH,GACdC,EAAgB,KAUpB,OACI,yBAAKjG,UAAWgC,IAAEoE,KACd,kBAAC,EAAD,CAAOrF,SAjBS,SAACD,GACrBmF,EAAgBnF,IAiBLA,MAAOkF,EACP7E,WAXI,SAACkF,GAChB5F,EAAMgC,SAAS,MACO,KAAnB4D,EAAMC,UACLJ,KASOxF,MAAOD,EAAMC,QAEpB,kBAAC,EAAD,CAAQI,MAAO,QAASuE,MAAOa,IAC/B,gIAA4BzF,EAAM8F,MAAMC,W,iBCnCvCC,EAAwC,SAAChG,GAMlD,OACI,6BACI,2BAAOI,KAAK,WACLb,UAAS,UAAKW,IAAM+F,YAAX,YAA0B/F,IAAM0B,OACzCC,QAAS7B,EAAMkG,cACf5F,SATM,SAACC,GAClBP,EAAMmG,YAAY5F,EAAEC,cAAcqB,cCN7BuE,EAAsB,WAAO,IAAD,EACGtF,oBAAkB,GADrB,mBAChCoF,EADgC,KACjBG,EADiB,OAEbvF,mBAAwB,MAFX,mBAEhCb,EAFgC,UAOrC,OACI,6BACI,kBAAC,EAAD,CAAUiG,cAAeA,EAAeC,YAN5B,SAAC9F,GACjBgG,EAAiBhG,MAMb,kBAAC,EAAD,CAAOC,SAAU,SAACD,GAAWiD,QAAQC,IAAIlD,IAClCA,MAAO,QACPJ,MAAOA,IACd,kBAAC,EAAD,CAAQI,MAAO,SAAUuE,MAAO,kBAAMtB,QAAQC,IAAK,cCFlD+C,EAA0C,SAACtG,GACpD,OACI,6BACI,yCACA,yBAAKT,UAAU,WACX,kBAAC,EAAD,CAAOqE,IAAI,mEACX,kBAAC,EAAD,CAASI,OAAO,UAAUG,OAAO,kBAAkBE,SAAS,WAEhE,kBAAC,EAAD,CAASU,QAAS/E,EAAM+E,QACfI,eAAgBnF,EAAMmF,eACtBE,cAAerF,EAAMqF,gBAE9B,kBAAC,EAAD,CAAUK,QAAS1F,EAAM0F,QACfI,MAAO9F,EAAM8F,MACb7F,MAAOD,EAAMC,MACb+B,SAAUhC,EAAMgC,WAE1B,kBAAC,EAAD,QCrBL,SAASuE,KAAO,IAAD,EACUzF,mBACxB,CACI,CAACW,GAAI,EAAGC,KAAM,MAAOwD,SAAU,UAC/B,CAACzD,GAAI,EAAGC,KAAM,iBAAkBwD,SAAU,QAC1C,CAACzD,GAAI,EAAGC,KAAM,mBAAoBwD,SAAU,QAC5C,CAACzD,GAAI,EAAGC,KAAM,gBAAiBwD,SAAU,UACzC,CAACzD,GAAI,EAAGC,KAAM,UAAWwD,SAAU,SAPzB,mBACbH,EADa,KACJyB,EADI,OAWQ1F,mBAAiB,OAXzB,mBAWb2F,EAXa,KAWLC,EAXK,OAYM5F,mBAA0B,CAC9C,CAACW,GAAIkF,cAAMjF,KAAM,WAbH,mBAYboE,EAZa,KAYNc,EAZM,OAeM9F,mBAAwB,MAf9B,mBAebb,EAfa,KAeN+B,EAfM,KAiBlB,SAAS0D,EAAQhE,GACb,GAAIA,GAAQA,EAAKa,OAAQ,CACrBC,MAAM,SAAD,OAAUd,EAAV,OACL,IACImF,EAAQ,CADE,CAACpF,GAAIkF,cAAMjF,KAAMA,IACnB,mBAAgBoE,IAC5Bc,EAASC,QAET7E,EAAS,SACTQ,MAAM,wBAId,SAAS2C,EAAe1D,GACpB,IAAIqF,EAAa/B,EAAQ0B,QAAO,SAAAM,GAAC,OAAIA,EAAEtF,KAAOA,KAC9C+E,EAAWM,GAGf,SAASzB,EAAchF,GACnBqG,EAAUrG,GAGd,IAAI2G,EAAkBjC,EAWtB,MAVe,SAAX0B,IACAO,EAAkBjC,EAAQ0B,QAAO,SAAAzB,GAAC,MAAmB,SAAfA,EAAEE,aAE7B,WAAXuB,IACAO,EAAkBjC,EAAQ0B,QAAO,SAAAzB,GAAC,MAAmB,WAAfA,EAAEE,aAE7B,QAAXuB,IACAO,EAAkBjC,EAAQ0B,QAAO,SAAAzB,GAAC,MAAmB,QAAfA,EAAEE,aAIxC,yBAAK3F,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO0H,KAAM,aAAcC,OAAQ,kBAAM,kBAAC,EAAD,CACrCnC,QAASiC,EACT7B,eAAgBA,EAChBE,cAAeA,EACfK,QAASA,EACTI,MAAOA,EACP7F,MAAOA,EACP+B,SAAUA,OAEd,kBAAC,IAAD,CAAOiF,KAAM,UAAWC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAM,cAAeC,OAAQ,kBAAM,kBAAC,EAAD,UC9DlCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASN,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEFO,SAASC,eAAe,SDgIxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhI,GACLqD,QAAQrD,MAAMA,EAAMiI,c","file":"static/js/main.66be756e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__QUndn\",\"menu\":\"Navbar_menu__33gWc\",\"item\":\"Navbar_item__1oAgO\",\"activeLick\":\"Navbar_activeLick__1WBAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Message_block__BRHGw\",\"name\":\"Message_name__gnnKh\",\"content\":\"Message_content__vr_kv\",\"text\":\"Message_text__2DJGE\",\"time\":\"Message_time__3pmJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Affairs_list__3kKHX\",\"item\":\"Affairs_item__3pg4S\",\"name\":\"Affairs_name__FXy4S\",\"buttonsBox\":\"Affairs_buttonsBox__1EPnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3xVrl\",\"error\":\"Input_error__1ZKOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1FwsH\",\"type\":\"Button_type__Sn6ps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionInput\":\"Checkbox_optionInput__3X60D\",\"click-wave\":\"Checkbox_click-wave__3wF9I\",\"radio\":\"Checkbox_radio__kv3YS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"EditableSpan_span__2PvKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Junior_main__388Ep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Select_item__1m0oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Radio_radio__vHOjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Image_logo__3lc0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Greeting_box__1JhWH\"};","import {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className={styles.nav}> <span>Navbar</span>\r\n            <div className={styles.menu} >\r\n                <div className={styles.item}>\r\n                    <NavLink to={'/preJunior'} activeClassName={styles.activeLick}>PreJunior</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={'/junior'} activeClassName={styles.activeLick}>Junior</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={'/juniorPlus'} activeClassName={styles.activeLick}>JuniorPlus</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport style from './Input.module.css'\r\n\r\nexport type InputProsType ={\r\n    onChange: (value: string) => void\r\n    value: string\r\n    pressEnter?: (event: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: string | null\r\n    onBlur?: () => void\r\n}\r\n\r\nexport const Input: React.FC<InputProsType> = (props) => {\r\n\r\n    const newText = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input className={props.error ? `${style.input} ${style.error}` : style.input} type=\"text\"\r\n                   value={props.value}\r\n                   onChange={newText}\r\n                   onKeyPress={props.pressEnter}\r\n                   autoFocus\r\n                   onBlur={props.onBlur}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './EditableSpan.module.css';\r\nimport {Input} from '../Input/Input';\r\n\r\n\r\nexport type EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    error: string | null\r\n\r\n}\r\n\r\nexport const EditableSpan: React.FC<EditableSpanPropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(true);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(true);\r\n        props.onChange(props.value);\r\n    };\r\n\r\n    const changeValue = (value: string) => {\r\n        props.onChange(value)\r\n    };\r\n\r\n    return (\r\n        editMode\r\n            ? <span className={style.span} onDoubleClick={activatedEditMode}>{props.value}</span>\r\n            : <Input value={props.value}\r\n                     onChange={changeValue}\r\n                     error={props.error}\r\n                     onBlur={deActivatedEditMode}\r\n            />\r\n    )\r\n};\r\n\r\n\r\n","import styles from './Select.module.css'\r\nimport React, {ChangeEvent} from 'react'\r\nimport {SelectionsType} from '../../Junior/Junior';\r\n\r\nexport type SelectPropsType = {\r\n    selections: Array<SelectionsType>\r\n    value: string | undefined\r\n    onChange: (value: string) => void\r\n\r\n}\r\n\r\nexport const Select: React.FC<SelectPropsType> = (props) => {\r\n\r\n    let option = props.selections\r\n        .map(s => <option key={s.id} value={s.value}>{s.name}</option>);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <select value={props.value} onChange={onChange} className={styles.item}>\r\n            {option}\r\n        </select>\r\n    )\r\n}\r\n","import styles from './Radio.module.css'\r\nimport React, {ChangeEvent} from 'react';\r\n\r\nexport type RadioPropsType = {\r\n    name: string\r\n    value: boolean\r\n    onChange: (check:boolean) => void\r\n}\r\n\r\nexport const Radio: React.FC<RadioPropsType> = (props) => {\r\n\r\n    const onChangeRadio = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange(e.currentTarget.checked)\r\n    };\r\n    return (\r\n        <div>\r\n            <div className={styles.radio}>\r\n                <input type=\"radio\" checked={false} onChange={onChangeRadio}/>\r\n                <span>Radio</span>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n","import React, {useState} from 'react';\r\nimport {EditableSpan} from '../common/EditableSpan/EditableSpan';\r\nimport style from './Junior.module.css'\r\nimport {Select} from '../common/Select/Select';\r\nimport {Radio} from '../common/Radio/Radio';\r\n\r\nexport type SelectionsType = {\r\n    id: number\r\n    value: string\r\n    name: string\r\n}\r\n\r\nexport const Junior = () => {\r\n\r\n    const [value, setValue] = useState('EditableSpan');\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [parentValue, setParentValue] = useState<string | undefined>(undefined);\r\n    const [radioValue, setRadioValue] = useState<boolean>(false);\r\n\r\n    //junior Radio\r\n    const changeRadio = (value: boolean) => {\r\n        setRadioValue(!value);\r\n        console.log(radioValue)\r\n    };\r\n\r\n    //junior selector\r\n    const selections: Array<SelectionsType> = [\r\n        {id: 1, value: '1', name: 'React' },\r\n        {id: 2, value: '2', name: 'Redux' },\r\n        {id: 3, value: '3', name: 'JS' },\r\n        {id: 4, value: '4', name: 'Angular' },\r\n    ];\r\n    const onChangeSelect = (value: string) => {\r\n        setParentValue(value);\r\n    };\r\n\r\n    const onChange = (value: string) => {\r\n        if (value.trim()) {\r\n            setValue(value);\r\n        } else {\r\n            alert('error');\r\n            setError('error');\r\n        }\r\n    };\r\n\r\n    function saveState<T>(key: string, state: T) {\r\n        const stateAsString = JSON.stringify(state);\r\n        localStorage.setItem(key, stateAsString)\r\n    }\r\n    function addDateForState() {\r\n        saveState('test', value);\r\n    }\r\n\r\n    function restoreState<T>(key: string, defaultState: T) {\r\n        const stateAsString = localStorage.getItem(key);\r\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n        return defaultState;\r\n    }\r\n    function getDataFromStore() {\r\n        const newValue: string = restoreState<string>('test', '0');\r\n        console.log(newValue);\r\n        setValue(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <h3>Junior</h3>\r\n            <EditableSpan value={value}\r\n                          onChange={onChange}\r\n                          error={error}\r\n            />\r\n            <button onClick={ addDateForState }>Save</button>\r\n            <button onClick={ getDataFromStore }>Restore</button>\r\n            <br/>\r\n            <Select onChange={onChangeSelect} value={parentValue} selections={selections}/>\r\n            <br/>\r\n            <Radio value={radioValue} onChange={changeRadio} name={'Maikl'}/>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            <h3>JuniorPlus</h3>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport s from './Image.module.css'\r\n\r\ntype ImagePropsType = {\r\n    url: string\r\n}\r\n\r\nexport const Image: React.FC<ImagePropsType> = (props) => {\r\n    return (\r\n        <div className={s.logo}>\r\n            <img src={props.url} alt=\"logo\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    myName: string;\r\n    myText: string;\r\n    realTime: string;\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={s.block}>\r\n            <MessageName name={props.myName}/>\r\n            <div className={s.content}>\r\n                <MessageText text={props.myText}/>\r\n                <MessageTime time={props.realTime}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\ntype MessageNamePropsType = {\r\n    name: string\r\n}\r\nconst MessageName: React.FC<MessageNamePropsType> = (props) => {\r\n    return (\r\n        <div className={s.name}>\r\n            {props.name}\r\n        </div>\r\n    )\r\n};\r\n\r\ntype MessageTextPropsType = {\r\n    text: string\r\n}\r\nconst MessageText: React.FC<MessageTextPropsType> = (props) => {\r\n    return (\r\n        <div className={s.text}>\r\n            {props.text}\r\n        </div>\r\n    )\r\n};\r\n\r\ntype MessageTimePropsType = {\r\n    time: string\r\n}\r\nconst MessageTime: React.FC<MessageTimePropsType> = (props) => {\r\n    return (\r\n        <div className={s.time}>\r\n            {props.time}\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\nexport type ButtonPropsType = {\r\n    click: () => void\r\n    value: string\r\n    red?: string\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <button className={props.red === 'delete' ? `${style.button} ${style.type}` : style.button} onClick={props.click}>{props.value}</button>\r\n        </>\r\n    )\r\n};\r\n","import s from './Affairs.module.css'\r\nimport React from 'react';\r\nimport {Button} from '../../common/Button/Button';\r\n\r\n\r\nexport type AffairsType = {\r\n    id: number\r\n    name: string\r\n    priority: string\r\n\r\n}\r\nexport type AffairsPropsType = {\r\n    affairs: Array<AffairsType>\r\n    removeBusiness: (id: number) => void\r\n    filterAffairs: (value: string) => void\r\n}\r\n\r\nexport const Affairs: React.FC<AffairsPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.list}>\r\n            <h3>Affairs</h3>\r\n            {\r\n                props.affairs.map(a => {\r\n                        const deleteItem = () => {\r\n                            props.removeBusiness(a.id)\r\n                        };\r\n                        return (\r\n                            <div key={a.id} className={s.item}>\r\n                                <div className={s.name}>{a.name}</div>\r\n                                <div className={s.mean}>{a.priority}</div>\r\n                                <Button click={deleteItem} value={'Delete'} red={'delete'}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n            <div className={s.buttonsBox}>\r\n                <Button click={() => props.filterAffairs('all')} value={'All'}/>\r\n                <Button click={() => props.filterAffairs('high')} value={'High'}/>\r\n                <Button click={() => props.filterAffairs('middle')} value={'Middle'}/>\r\n                <Button click={() => props.filterAffairs('low')} value={'Low'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, {KeyboardEvent, useState} from 'react';\r\nimport s from './Greeting.module.css'\r\nimport {Input} from '../../common/Input/Input';\r\nimport {Button} from '../../common/Button/Button';\r\n\r\nexport type NameType = {\r\n    id: string,\r\n    name: string\r\n}\r\nexport type GreetingPropsType = {\r\n    addName: (name: string) => void\r\n    names: Array<NameType>\r\n    error: string | null\r\n    setError: (value: string | null) => void\r\n}\r\n\r\nexport const Greeting: React.FC<GreetingPropsType> = (props) => {\r\n\r\n    let [newNameTitle, setNewNameTitle] = useState<string>('');\r\n\r\n    const onChangeHandler = (value: string) => {\r\n        setNewNameTitle(value);\r\n    };\r\n    const addNewName = () => {\r\n        props.addName(newNameTitle);\r\n        setNewNameTitle('');\r\n    };\r\n\r\n    const pressEnter = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        props.setError(null);\r\n        if(event.charCode === 13) {\r\n            addNewName();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.box}>\r\n            <Input onChange={onChangeHandler}\r\n                   value={newNameTitle}\r\n                   pressEnter={pressEnter}\r\n                   error={props.error}\r\n            />\r\n            <Button value={'Hello'} click={addNewName}/>\r\n            <span>{`количество имен - ${props.names.length}`}</span>\r\n        </div>\r\n    )\r\n};\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from './Checkbox.module.css'\r\n\r\nexport type CheckboxPropsType = {\r\n    checkboxValue: boolean\r\n    changeValue: (value: boolean) => void\r\n}\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = (props) => {\r\n\r\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.changeValue(e.currentTarget.checked)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\"\r\n                   className={`${style.optionInput} ${style.radio}`}\r\n                   checked={props.checkboxValue}\r\n                   onChange={changeStatus}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Checkbox} from '../../common/Checkbox/Checkbox';\r\nimport {Input} from '../../common/Input/Input';\r\nimport {Button} from '../../common/Button/Button';\r\n\r\nexport const UniversalComponents = () => {\r\n    let [checkboxValue, setCheckboxValue] = useState<boolean>(true);\r\n    let [error, setError] = useState<string | null>(null);\r\n    const changeValue = (value: boolean) => {\r\n        setCheckboxValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Checkbox checkboxValue={checkboxValue} changeValue={changeValue}/>\r\n            <Input onChange={(value) => {console.log(value)}}\r\n                   value={'INPUT'}\r\n                   error={error}/>\r\n            <Button value={'BUTTON'} click={() => console.log(('click'))}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport {Image} from './Image/Image';\r\nimport {Message} from './Message/Message';\r\nimport {Affairs, AffairsType} from './Affairs/Affairs';\r\nimport {Greeting, NameType} from './Greeting/Greeting';\r\nimport {UniversalComponents} from './UniversalComponents/UniversalComponents';\r\n\r\nexport type PreJuniorPropsType = {\r\n    affairs: Array<AffairsType>\r\n    removeBusiness: (id: number) => void\r\n    filterAffairs: (value: string) => void\r\n    addName: (name: string) => void\r\n    names: Array<NameType>\r\n    error: string | null\r\n    setError: (value: string | null) => void\r\n}\r\nexport const PreJunior: React.FC<PreJuniorPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <h3>PreJunior</h3>\r\n            <div className=\"message\">\r\n                <Image url='https://live.staticflickr.com/1170/5152497387_939ee3015a_b.jpg'/>\r\n                <Message myName='Michael' myText='I love React!!!' realTime='19.40'/>\r\n            </div>\r\n            <Affairs affairs={props.affairs}\r\n                     removeBusiness={props.removeBusiness}\r\n                     filterAffairs={props.filterAffairs}\r\n            />\r\n            <Greeting addName={props.addName}\r\n                      names={props.names}\r\n                      error={props.error}\r\n                      setError={props.setError}\r\n            />\r\n            <UniversalComponents/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {AffairsType} from './components/PreJunior/Affairs/Affairs';\nimport {NameType} from './components/PreJunior/Greeting/Greeting';\nimport {v1} from 'uuid';\nimport {Route} from 'react-router-dom';\nimport {Navbar} from './components/Navbar/Navbar';\nimport {Junior} from './components/Junior/Junior';\nimport {JuniorPlus} from './components/JuniorPlus/JuniorPlus';\nimport {PreJunior} from './components/PreJunior/PreJunior';\n\n\nexport function App() {\n    let [affairs, setAffairs] = useState<Array<AffairsType>>(\n        [\n            {id: 1, name: 'Job', priority: 'middle'},\n            {id: 2, name: 'Learning react', priority: 'high'},\n            {id: 3, name: 'Learning English', priority: 'high'},\n            {id: 4, name: 'Learning HTML', priority: 'middle'},\n            {id: 5, name: 'Fishing', priority: 'low'}\n        ]\n    );\n\n    let [filter, setFilter] = useState<string>('all');\n    let [names, setNames] = useState<Array<NameType>>([\n        {id: v1(), name: 'Maikl'}\n    ]);\n    let [error, setError] = useState<string | null>(null);\n\n    function addName(name: string) {\n        if (name && name.trim()) {\n            alert(`Hello ${name}!!`);\n            let newName = {id: v1(), name: name};\n            let newNames = [newName, ...names];\n            setNames(newNames);\n        } else {\n            setError('error');\n            alert('Enter name please!!!')\n        }\n    }\n\n    function removeBusiness(id: number) {\n        let newAffairs = affairs.filter(b => b.id !== id);\n        setAffairs(newAffairs);\n    }\n\n    function filterAffairs(value: string) {\n        setFilter(value);\n    }\n\n    let tasksForAffairs = affairs;\n    if (filter === 'high') {\n        tasksForAffairs = affairs.filter(a => a.priority === 'high')\n    }\n    if (filter === 'middle') {\n        tasksForAffairs = affairs.filter(a => a.priority === 'middle')\n    }\n    if (filter === 'low') {\n        tasksForAffairs = affairs.filter(a => a.priority === 'low')\n    }\n\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Route path={'/preJunior'} render={() => <PreJunior\n                affairs={tasksForAffairs}\n                removeBusiness={removeBusiness}\n                filterAffairs={filterAffairs}\n                addName={addName}\n                names={names}\n                error={error}\n                setError={setError}\n            />}/>\n            <Route path={'/junior'} render={() => <Junior/>}/>\n            <Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n        </div>\n    );\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App/>\n    </HashRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}